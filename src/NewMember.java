
import java.awt.print.PrinterException;
import java.io.File;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.ZoneId;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Thisath Dewsen
 */
public class NewMember extends javax.swing.JFrame {
        Connection conn;
        ResultSet rs;
        PreparedStatement pst; 
         
    /**
     * Creates new form NewMember
     */
    public NewMember() {
        super("New Member");
        initComponents();
        //conn = Javaconnect.ConnecrDB(); 
        autoID();
        tableLoard();
        //jPanel3.setVisible(false);
        setExtendedState(MAXIMIZED_BOTH);
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        txtAge = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtProffession = new javax.swing.JTextField();
        txtFullName = new javax.swing.JTextField();
        txtNic = new javax.swing.JTextField();
        txtPhoneNo = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtInitialName = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtAddress = new javax.swing.JTextArea();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        rSTableMetro1 = new rojeru_san.complementos.RSTableMetro();
        searchMember = new rojeru_san.complementos.RSButtonHover();
        rSButtonHover1 = new rojeru_san.complementos.RSButtonHover();
        Switch = new rojeru_san.complementos.RSButtonHover();
        Switch1 = new rojeru_san.complementos.RSButtonHover();
        Save = new rojeru_san.complementos.RSButtonHover();
        rSButtonHover2 = new rojeru_san.complementos.RSButtonHover();
        rSButtonHover3 = new rojeru_san.complementos.RSButtonHover();
        rSButtonHover5 = new rojeru_san.complementos.RSButtonHover();
        rSButtonHover4 = new rojeru_san.complementos.RSButtonHover();

        jTextField1.setText("jTextField1");

        jPanel1.setBackground(new java.awt.Color(240, 168, 76));
        jPanel1.setPreferredSize(new java.awt.Dimension(1366, 917));

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel2.setText("Name With Initials");

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel1.setText("Full Name");

        txtAge.setBackground(new java.awt.Color(255, 255, 204));
        txtAge.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        txtAge.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtAgeFocusGained(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel4.setText("Age");

        txtProffession.setBackground(new java.awt.Color(255, 255, 204));
        txtProffession.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        txtFullName.setBackground(new java.awt.Color(255, 255, 204));
        txtFullName.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        txtNic.setBackground(new java.awt.Color(255, 255, 204));
        txtNic.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        txtPhoneNo.setBackground(new java.awt.Color(255, 255, 204));
        txtPhoneNo.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        jLabel7.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel7.setText("Proffession");

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel5.setText("NIC");

        jLabel9.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel9.setText("Address");

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel6.setText("Phone No");

        jLabel8.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jLabel8.setText("Add New Member");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel3.setText("DOB");

        txtInitialName.setBackground(new java.awt.Color(255, 255, 204));
        txtInitialName.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        jLabel11.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel11.setText("MemberID");

        txtId.setBackground(new java.awt.Color(255, 255, 204));
        txtId.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        txtId.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtIdFocusGained(evt);
            }
        });

        jDateChooser1.setBackground(new java.awt.Color(255, 255, 255));
        jDateChooser1.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jDateChooser1PropertyChange(evt);
            }
        });

        txtAddress.setBackground(new java.awt.Color(255, 255, 204));
        txtAddress.setColumns(20);
        txtAddress.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtAddress.setRows(5);
        txtAddress.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        jScrollPane3.setViewportView(txtAddress);

        jPanel2.setBackground(new java.awt.Color(240, 168, 76));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        rSTableMetro1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        rSTableMetro1.setColorBackgoundHead(new java.awt.Color(255, 255, 204));
        rSTableMetro1.setColorBordeFilas(new java.awt.Color(204, 204, 204));
        rSTableMetro1.setColorBordeHead(new java.awt.Color(204, 204, 204));
        rSTableMetro1.setColorFilasBackgound1(new java.awt.Color(204, 204, 204));
        rSTableMetro1.setColorFilasBackgound2(new java.awt.Color(255, 255, 255));
        rSTableMetro1.setColorFilasForeground1(new java.awt.Color(0, 0, 0));
        rSTableMetro1.setColorFilasForeground2(new java.awt.Color(0, 0, 0));
        rSTableMetro1.setColorForegroundHead(new java.awt.Color(51, 51, 51));
        rSTableMetro1.setColorSelBackgound(new java.awt.Color(51, 153, 255));
        rSTableMetro1.setFuenteFilas(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        rSTableMetro1.setFuenteFilasSelect(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rSTableMetro1.setFuenteHead(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        rSTableMetro1.setGridColor(new java.awt.Color(153, 153, 153));
        rSTableMetro1.setIntercellSpacing(new java.awt.Dimension(0, 0));
        rSTableMetro1.setRowHeight(28);
        rSTableMetro1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rSTableMetro1MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(rSTableMetro1);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 743, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addContainerGap())
        );

        searchMember.setBackground(new java.awt.Color(204, 204, 204));
        searchMember.setBorder(null);
        searchMember.setForeground(new java.awt.Color(0, 0, 0));
        searchMember.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/search.png"))); // NOI18N
        searchMember.setText("Search");
        searchMember.setColorText(new java.awt.Color(0, 0, 0));
        searchMember.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        searchMember.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchMemberActionPerformed(evt);
            }
        });

        rSButtonHover1.setText("Print");
        rSButtonHover1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        rSButtonHover1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rSButtonHover1ActionPerformed(evt);
            }
        });

        Switch.setText("Sort By Old");
        Switch.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        Switch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SwitchActionPerformed(evt);
            }
        });

        Switch1.setText("Sort By New");
        Switch1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        Switch1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Switch1ActionPerformed(evt);
            }
        });

        Save.setBackground(new java.awt.Color(204, 204, 204));
        Save.setBorder(null);
        Save.setForeground(new java.awt.Color(0, 0, 0));
        Save.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/diskette.png"))); // NOI18N
        Save.setText("Add");
        Save.setColorText(new java.awt.Color(0, 0, 0));
        Save.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveActionPerformed(evt);
            }
        });

        rSButtonHover2.setBackground(new java.awt.Color(204, 204, 204));
        rSButtonHover2.setBorder(null);
        rSButtonHover2.setForeground(new java.awt.Color(0, 0, 0));
        rSButtonHover2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/refresh.png"))); // NOI18N
        rSButtonHover2.setText("Update");
        rSButtonHover2.setColorText(new java.awt.Color(0, 0, 0));
        rSButtonHover2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rSButtonHover2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rSButtonHover2ActionPerformed(evt);
            }
        });

        rSButtonHover3.setBackground(new java.awt.Color(204, 204, 204));
        rSButtonHover3.setBorder(null);
        rSButtonHover3.setForeground(new java.awt.Color(0, 0, 0));
        rSButtonHover3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/delete.png"))); // NOI18N
        rSButtonHover3.setText("Delete");
        rSButtonHover3.setColorText(new java.awt.Color(0, 0, 0));
        rSButtonHover3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rSButtonHover3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rSButtonHover3ActionPerformed(evt);
            }
        });

        rSButtonHover5.setBackground(new java.awt.Color(204, 204, 204));
        rSButtonHover5.setBorder(null);
        rSButtonHover5.setForeground(new java.awt.Color(0, 0, 0));
        rSButtonHover5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/undo.png"))); // NOI18N
        rSButtonHover5.setText("Back");
        rSButtonHover5.setColorText(new java.awt.Color(0, 0, 0));
        rSButtonHover5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rSButtonHover5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rSButtonHover5ActionPerformed(evt);
            }
        });

        rSButtonHover4.setBackground(new java.awt.Color(204, 204, 204));
        rSButtonHover4.setBorder(null);
        rSButtonHover4.setForeground(new java.awt.Color(0, 0, 0));
        rSButtonHover4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/cleaning.png"))); // NOI18N
        rSButtonHover4.setText("Clear");
        rSButtonHover4.setColorText(new java.awt.Color(0, 0, 0));
        rSButtonHover4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rSButtonHover4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rSButtonHover4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(searchMember, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel11))
                                .addGap(59, 59, 59)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtInitialName, javax.swing.GroupLayout.DEFAULT_SIZE, 265, Short.MAX_VALUE)
                                    .addComponent(txtAge, javax.swing.GroupLayout.DEFAULT_SIZE, 265, Short.MAX_VALUE)
                                    .addComponent(txtNic, javax.swing.GroupLayout.DEFAULT_SIZE, 265, Short.MAX_VALUE)
                                    .addComponent(txtPhoneNo, javax.swing.GroupLayout.DEFAULT_SIZE, 265, Short.MAX_VALUE)
                                    .addComponent(txtProffession, javax.swing.GroupLayout.DEFAULT_SIZE, 265, Short.MAX_VALUE)
                                    .addComponent(txtFullName, javax.swing.GroupLayout.DEFAULT_SIZE, 265, Short.MAX_VALUE)
                                    .addComponent(jDateChooser1, javax.swing.GroupLayout.DEFAULT_SIZE, 265, Short.MAX_VALUE)
                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txtId, javax.swing.GroupLayout.DEFAULT_SIZE, 265, Short.MAX_VALUE))))
                        .addGap(37, 37, 37)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(Save, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(rSButtonHover2, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(rSButtonHover3, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(rSButtonHover5, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(rSButtonHover4, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Switch, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Switch1, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(rSButtonHover1, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(43, 43, 43))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Switch, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rSButtonHover1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Switch1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(Save, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(rSButtonHover5, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(rSButtonHover2, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(rSButtonHover3, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(rSButtonHover4, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(50, 50, 50))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addGap(30, 30, 30)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel11)
                                    .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel1)
                                    .addComponent(txtFullName, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel2)
                                    .addComponent(txtInitialName, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(26, 26, 26)
                                        .addComponent(jLabel3))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel4)
                                    .addComponent(txtAge, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel5)
                                    .addComponent(txtNic, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel6)
                                    .addComponent(txtPhoneNo, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel7)
                                    .addComponent(txtProffession, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel9)
                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(searchMember, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(138, 145, Short.MAX_VALUE))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 768, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    
        
    
    private void txtIdFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtIdFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIdFocusGained

    private void jDateChooser1PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jDateChooser1PropertyChange
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jDateChooser1PropertyChange

    private void txtAgeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtAgeFocusGained
        // TODO add your handling code here:
        
    }//GEN-LAST:event_txtAgeFocusGained

    private void rSTableMetro1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rSTableMetro1MouseClicked
        // TODO add your handling code here:
        DefaultTableModel tmodel = (DefaultTableModel)rSTableMetro1.getModel();
        int selectedrowindex = rSTableMetro1.getSelectedRow();

        txtId.setText(tmodel.getValueAt(selectedrowindex, 0).toString());
        txtFullName.setText(tmodel.getValueAt(selectedrowindex, 1).toString());
        txtInitialName.setText(tmodel.getValueAt(selectedrowindex, 2).toString());
        ((JTextField)jDateChooser1.getDateEditor().getUiComponent()).setText(tmodel.getValueAt(selectedrowindex, 3).toString());
        txtAge.setText(tmodel.getValueAt(selectedrowindex, 4).toString());
        txtNic.setText(tmodel.getValueAt(selectedrowindex, 5).toString());
        txtPhoneNo.setText(tmodel.getValueAt(selectedrowindex, 6).toString());
        txtProffession.setText(tmodel.getValueAt(selectedrowindex, 7).toString());
        txtAddress.setText(tmodel.getValueAt(selectedrowindex, 8).toString());
          searchIssuedBook();
    }//GEN-LAST:event_rSTableMetro1MouseClicked

    private void SaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveActionPerformed
        // TODO add your handling code here:
           String  mid = txtId.getText();
        String  fullname = txtFullName.getText();
        String  initial = txtInitialName.getText(); 
        String  date = ((JTextField)jDateChooser1.getDateEditor().getUiComponent()).getText();
      
        String age = txtAge.getText();
        String  nic = txtNic.getText();
        String  phoneno = txtPhoneNo.getText();
        String  job = txtProffession.getText();
        String  address = txtAddress.getText();
       
        
        
        try{
            conn = Javaconnect.ConnecrDB();
            String sql = "INSERT INTO `member`(`mid`, `fullname`, `initialname`, `dob`, `age`, `nic`, `phoneno`, `job`, `address`) VALUES ('"+mid+"','"+fullname+"','"+initial+"','"+date+"','"+age+"','"+nic+"','"+phoneno+"','"+job+"','"+address+"')";
            pst = conn.prepareStatement(sql);
            pst.execute();
            JOptionPane.showMessageDialog(rootPane,"Member Registerd Succesfully");
            clearField();
            autoID();  
            tableLoard();
            
            
        }catch(Exception e){
            JOptionPane.showMessageDialog(rootPane,e);
        }finally{
            try {
                pst.close(); 
                conn.close();
            } catch (SQLException ex) {
                Logger.getLogger(IssueBook.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }
       
    }//GEN-LAST:event_SaveActionPerformed

    private void rSButtonHover2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rSButtonHover2ActionPerformed
        // TODO add your handling code here:
        //update records
        String  mid = txtId.getText();
        String  fullname = txtFullName.getText();
        String  initial = txtInitialName.getText(); 
        String  date = ((JTextField)jDateChooser1.getDateEditor().getUiComponent()).getText();
        String  age = txtAge.getText();
        String  nic = txtNic.getText();
        String  phoneno = txtPhoneNo.getText();
        String  job = txtProffession.getText();
        String  address = txtAddress.getText();
        
        try{
         conn = Javaconnect.ConnecrDB();   
        String sql = "UPDATE `member` SET `fullname`='"+fullname +"',`initialname`='"+initial +"',`dob`='"+date +"',`age`='"+age +"',`nic`='"+nic +"',`phoneno`='"+phoneno +"',`job`='"+job +"',`address`='"+address +"' WHERE mid = '"+mid+"'";    
        pst = conn.prepareStatement(sql);
        pst.execute();
            
            JOptionPane.showMessageDialog(null,"Member Detail Updated Succexsfully");
        }catch(Exception e){
            JOptionPane.showMessageDialog(null,e);
        }finally{
            try {
                pst.close();
                conn.close();
            } catch (SQLException ex) {
                Logger.getLogger(IssueBook.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }
        
        tableLoard();
        //autoID();
    }//GEN-LAST:event_rSButtonHover2ActionPerformed

    private void rSButtonHover3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rSButtonHover3ActionPerformed
        // TODO add your handling code here:
        int opt = JOptionPane.showConfirmDialog(null, "Are You Sure To Delete the Member","Delete",JOptionPane.YES_NO_OPTION);
        if(opt == 0){
         try{
             conn = Javaconnect.ConnecrDB();
             String sql = "DELETE FROM `member` WHERE mid = '"+txtId.getText()+"'";
             pst = conn.prepareStatement(sql);
             pst.execute();
             JOptionPane.showMessageDialog(null,"Member Deleted Succexsfully");
             tableLoard();
         }catch(Exception e){
             JOptionPane.showMessageDialog(null,e);
         }finally{
            try {
                pst.close();
                conn.close();
            } catch (SQLException ex) {
                Logger.getLogger(IssueBook.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }
        }
        
        
        
    }//GEN-LAST:event_rSButtonHover3ActionPerformed

    private void rSButtonHover5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rSButtonHover5ActionPerformed
        // TODO add your handling code here:
         setVisible(false);
       
    }//GEN-LAST:event_rSButtonHover5ActionPerformed

    private void rSButtonHover4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rSButtonHover4ActionPerformed
        // TODO add your handling code here:
        clearField();
        autoID();
        //jPanel3.setVisible(false);
    }//GEN-LAST:event_rSButtonHover4ActionPerformed

    private void searchMemberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchMemberActionPerformed
        // TODO add your handling code here:
        String id = txtId.getText();
        try{
            conn = Javaconnect.ConnecrDB();
            String sql = "SELECT `mid` AS MemberID, `fullname` AS FullName, `initialname` AS NameWithInitial, `dob` AS DOB, `age` AS Age, `nic` AS NIC, `phoneno` AS PhoneNo, `job` AS Proffesion, `address` AS Address FROM `member` WHERE mid = '"+id+"'";
            pst = conn.prepareStatement(sql);
            rs = pst.executeQuery();
            
            if(rs.next()){
                txtId.setText(rs.getString(1));
                txtFullName.setText(rs.getString(2));
                txtInitialName.setText(rs.getString(3));
                ((JTextField)jDateChooser1.getDateEditor().getUiComponent()).setText(rs.getString(4));
                txtAge.setText(rs.getString(5));
                txtNic.setText(rs.getString(6));
                txtPhoneNo.setText(rs.getString(7));
                txtProffession.setText(rs.getString(8));
                txtAddress.setText(rs.getString(9));
                
                
                rs.close();
                pst.close();       
                
            }else{
                JOptionPane.showMessageDialog(null,"Incorrect Id");
            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(null,e);
        }finally{
            try {
                pst.close();
                rs.close();
                conn.close();
            } catch (SQLException ex) {
                Logger.getLogger(IssueBook.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }
        
        //searchIssuedBook();
    }//GEN-LAST:event_searchMemberActionPerformed

    private void rSButtonHover1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rSButtonHover1ActionPerformed
            try {
                // TODO add your handling code here:
                rSTableMetro1.print();
            } catch (PrinterException ex) {
                Logger.getLogger(NewMember.class.getName()).log(Level.SEVERE, null, ex);
            }
    }//GEN-LAST:event_rSButtonHover1ActionPerformed

    private void SwitchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SwitchActionPerformed
        // TODO add your handling code here:
        try{
            conn = Javaconnect.ConnecrDB();
        String sql = "SELECT `mid` AS MemberID, `fullname` AS FullName, `initialname` AS NameWithInitial, `dob` AS DOB, `age` AS Age, `nic` AS NIC, `phoneno` AS PhoneNo, `job` AS Proffesion, `address` AS Address FROM `member` ORDER BY mid ASC";
        pst = conn.prepareStatement(sql);
        rs = pst.executeQuery();
        rSTableMetro1.setModel(net.proteanit.sql.DbUtils.resultSetToTableModel(rs));
        
        }catch(Exception e){
            JOptionPane.showConfirmDialog(rootPane , e);
        }finally{
            try {
                pst.close();
                rs.close();
                conn.close();
            } catch (SQLException ex) {
                Logger.getLogger(IssueBook.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }
    }//GEN-LAST:event_SwitchActionPerformed

    private void Switch1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Switch1ActionPerformed
        // TODO add your handling code here:
        try{
            conn = Javaconnect.ConnecrDB();
        String sql = "SELECT `mid` AS MemberID, `fullname` AS FullName, `initialname` AS NameWithInitial, `dob` AS DOB, `age` AS Age, `nic` AS NIC, `phoneno` AS PhoneNo, `job` AS Proffesion, `address` AS Address FROM `member` ORDER BY mid DESC";
        pst = conn.prepareStatement(sql);
        rs = pst.executeQuery();
        rSTableMetro1.setModel(net.proteanit.sql.DbUtils.resultSetToTableModel(rs));
        
        }catch(Exception e){
            JOptionPane.showConfirmDialog(rootPane , e);
        }finally{
            try {
                pst.close();
                rs.close();
                conn.close();
            } catch (SQLException ex) {
                Logger.getLogger(IssueBook.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }
    }//GEN-LAST:event_Switch1ActionPerformed
    
    
    
    private void autoID(){
        //generate nextId and show
        
        try{
            conn = Javaconnect.ConnecrDB();
        String sql = "SELECT mid FROM member ORDER BY mid DESC LIMIT 1";
        pst = conn.prepareStatement(sql);
        rs = pst.executeQuery();
        
        if(rs.next()){
            String idno = rs.getString(1);
            int n = Integer.parseInt(idno);
            n++;
            
            String mid = Integer.toString(n);
            txtId.setText(mid);
        }else{
             txtId.setText("1");
        }
        
        }catch(Exception e){
            
            
        }finally{
            try {
                pst.close();
                rs.close();
                conn.close();
            } catch (SQLException ex) {
                Logger.getLogger(IssueBook.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }
      
    }
    
    //retrieve data from database to table
  
    private void tableLoard(){
        //load table from database
        
        try{
            conn = Javaconnect.ConnecrDB();
        String sql = "SELECT `mid` AS MemberID, `fullname` AS FullName, `initialname` AS NameWithInitial, `dob` AS DOB, `age` AS Age, `nic` AS NIC, `phoneno` AS PhoneNo, `job` AS Proffesion, `address` AS Address FROM `member` ORDER BY mid DESC";
        pst = conn.prepareStatement(sql);
        rs = pst.executeQuery();
        rSTableMetro1.setModel(net.proteanit.sql.DbUtils.resultSetToTableModel(rs));
        
        }catch(Exception e){
            JOptionPane.showConfirmDialog(rootPane , e);
        }finally{
            try {
                pst.close();
                rs.close();
                conn.close();
            } catch (SQLException ex) {
                Logger.getLogger(IssueBook.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }
        
    }
    

    private void clearField(){
        
        //clear textfield
   
        txtId.setText("");
        txtFullName.setText("");
        txtInitialName.setText(""); 
        ((JTextField)jDateChooser1.getDateEditor().getUiComponent()).setText("");
        txtAge.setText("");
        txtNic.setText("");
        txtPhoneNo.setText("");
        txtProffession.setText("");
        txtAddress.setText("");
    }
    
    
    public void searchIssuedBook(){
        
        try{
            conn = Javaconnect.ConnecrDB();
            String sql = "SELECT bid AS BookID ,bname AS BookName,i_date AS IssueDate ,r_date AS DueDate FROM issue WHERE mid = '"+txtId.getText()+"' AND status = 'Issued'";
            
            pst = conn.prepareStatement(sql);
            rs = pst.executeQuery();
            
   
                //jLabel12.setText(" Book Issued ");
                //rSTableMetro2.setModel(net.proteanit.sql.DbUtils.resultSetToTableModel(rs));
                //jPanel3.setVisible(true);
          
            
        }catch(Exception e){
            
        }finally{
            try {
                pst.close();
                rs.close();
                conn.close();
            } catch (SQLException ex) {
                Logger.getLogger(IssueBook.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }
    }
    
    

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewMember.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewMember.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewMember.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewMember.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
            java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewMember().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private rojeru_san.complementos.RSButtonHover Save;
    private rojeru_san.complementos.RSButtonHover Switch;
    private rojeru_san.complementos.RSButtonHover Switch1;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextField jTextField1;
    private rojeru_san.complementos.RSButtonHover rSButtonHover1;
    private rojeru_san.complementos.RSButtonHover rSButtonHover2;
    private rojeru_san.complementos.RSButtonHover rSButtonHover3;
    private rojeru_san.complementos.RSButtonHover rSButtonHover4;
    private rojeru_san.complementos.RSButtonHover rSButtonHover5;
    private rojeru_san.complementos.RSTableMetro rSTableMetro1;
    private rojeru_san.complementos.RSButtonHover searchMember;
    private javax.swing.JTextArea txtAddress;
    private javax.swing.JTextField txtAge;
    private javax.swing.JTextField txtFullName;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtInitialName;
    private javax.swing.JTextField txtNic;
    private javax.swing.JTextField txtPhoneNo;
    private javax.swing.JTextField txtProffession;
    // End of variables declaration//GEN-END:variables
}
