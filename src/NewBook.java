
import java.awt.print.PrinterException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Thisath Dewsen
 */
public class NewBook extends javax.swing.JFrame {
        Connection conn;
        ResultSet rs;
        PreparedStatement pst; 
    /**
     * Creates new form NewBook
     */
    public NewBook() {
        initComponents();
        //conn = Javaconnect.ConnecrDB(); 
        autoID();
        tableLoard();
        setExtendedState(MAXIMIZED_BOTH);
        //setExtendedState(MAXIMIZED_BOTH);
        
        //txtStatus.setEditable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
      * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        txtPage = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtBookNo = new javax.swing.JTextField();
        txtPrice = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtBookName = new javax.swing.JTextField();
        txtAuthor = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        categories = new javax.swing.JComboBox<String>();
        jLabel8 = new javax.swing.JLabel();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        searchItem = new javax.swing.JComboBox<String>();
        jLabel9 = new javax.swing.JLabel();
        txtRackNo = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tbldetail = new rojeru_san.complementos.RSTableMetro();
        update = new rojeru_san.complementos.RSButtonHover();
        Delete = new rojeru_san.complementos.RSButtonHover();
        rSButtonHover3 = new rojeru_san.complementos.RSButtonHover();
        search = new rojeru_san.complementos.RSButtonHover();
        Back = new rojeru_san.complementos.RSButtonHover();
        clear1 = new rojeru_san.complementos.RSButtonHover();
        rSButtonHover1 = new rojeru_san.complementos.RSButtonHover();
        rSButtonHover2 = new rojeru_san.complementos.RSButtonHover();
        rSButtonHover4 = new rojeru_san.complementos.RSButtonHover();

        jPanel1.setBackground(new java.awt.Color(240, 168, 76));
        jPanel1.setPreferredSize(new java.awt.Dimension(1366, 917));

        txtPage.setBackground(new java.awt.Color(255, 255, 204));
        txtPage.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel2.setText("Book Name");

        txtBookNo.setBackground(new java.awt.Color(255, 255, 204));
        txtBookNo.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        txtBookNo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBookNoKeyReleased(evt);
            }
        });

        txtPrice.setBackground(new java.awt.Color(255, 255, 204));
        txtPrice.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jLabel6.setText("Add New Book");

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel4.setText("Price");

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel1.setText("BookNO");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel3.setText("Author");

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel5.setText("Page");

        txtBookName.setBackground(new java.awt.Color(255, 255, 204));
        txtBookName.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        txtBookName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBookNameKeyReleased(evt);
            }
        });

        txtAuthor.setBackground(new java.awt.Color(255, 255, 204));
        txtAuthor.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        txtAuthor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtAuthorKeyReleased(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel7.setText("Categorie No");

        categories.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        categories.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "000", "100", "200", "300", "400", "500", "600", "700", "800", "900" }));

        jLabel8.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel8.setText("Book Recived Date");

        searchItem.setBackground(new java.awt.Color(255, 255, 204));
        searchItem.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        searchItem.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Search By BookNo", "Search By BookName", "Search By Author" }));

        jLabel9.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel9.setText("Rack NO");

        txtRackNo.setBackground(new java.awt.Color(255, 255, 204));
        txtRackNo.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        jPanel3.setBackground(new java.awt.Color(240, 168, 76));
        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        tbldetail.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tbldetail.setColorBackgoundHead(new java.awt.Color(255, 255, 204));
        tbldetail.setColorBordeFilas(new java.awt.Color(204, 204, 204));
        tbldetail.setColorBordeHead(new java.awt.Color(204, 204, 204));
        tbldetail.setColorFilasBackgound1(new java.awt.Color(204, 204, 204));
        tbldetail.setColorFilasBackgound2(new java.awt.Color(255, 255, 255));
        tbldetail.setColorFilasForeground1(new java.awt.Color(0, 0, 0));
        tbldetail.setColorFilasForeground2(new java.awt.Color(0, 0, 0));
        tbldetail.setColorForegroundHead(new java.awt.Color(51, 51, 51));
        tbldetail.setColorSelBackgound(new java.awt.Color(51, 153, 255));
        tbldetail.setFuenteFilas(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        tbldetail.setFuenteFilasSelect(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tbldetail.setFuenteHead(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        tbldetail.setIntercellSpacing(new java.awt.Dimension(0, 0));
        tbldetail.setRowHeight(28);
        tbldetail.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbldetailMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tbldetail);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 747, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3)
                .addContainerGap())
        );

        update.setBackground(new java.awt.Color(204, 204, 204));
        update.setBorder(null);
        update.setForeground(new java.awt.Color(0, 0, 0));
        update.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/refresh.png"))); // NOI18N
        update.setText("Update");
        update.setColorText(new java.awt.Color(0, 0, 0));
        update.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });

        Delete.setBackground(new java.awt.Color(204, 204, 204));
        Delete.setBorder(null);
        Delete.setForeground(new java.awt.Color(0, 0, 0));
        Delete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/delete.png"))); // NOI18N
        Delete.setText("Delete");
        Delete.setColorText(new java.awt.Color(0, 0, 0));
        Delete.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteActionPerformed(evt);
            }
        });

        rSButtonHover3.setBackground(new java.awt.Color(204, 204, 204));
        rSButtonHover3.setBorder(null);
        rSButtonHover3.setForeground(new java.awt.Color(0, 0, 0));
        rSButtonHover3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/diskette.png"))); // NOI18N
        rSButtonHover3.setText("Add");
        rSButtonHover3.setColorText(new java.awt.Color(0, 0, 0));
        rSButtonHover3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rSButtonHover3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rSButtonHover3ActionPerformed(evt);
            }
        });

        search.setBackground(new java.awt.Color(204, 204, 204));
        search.setBorder(null);
        search.setForeground(new java.awt.Color(0, 0, 0));
        search.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/search.png"))); // NOI18N
        search.setText("Search");
        search.setColorText(new java.awt.Color(0, 0, 0));
        search.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchActionPerformed(evt);
            }
        });

        Back.setBackground(new java.awt.Color(204, 204, 204));
        Back.setBorder(null);
        Back.setForeground(new java.awt.Color(0, 0, 0));
        Back.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/previous.png"))); // NOI18N
        Back.setText("Back");
        Back.setColorText(new java.awt.Color(0, 0, 0));
        Back.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackActionPerformed(evt);
            }
        });

        clear1.setBackground(new java.awt.Color(204, 204, 204));
        clear1.setBorder(null);
        clear1.setForeground(new java.awt.Color(0, 0, 0));
        clear1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/cleaning.png"))); // NOI18N
        clear1.setText("Clear");
        clear1.setColorText(new java.awt.Color(0, 0, 0));
        clear1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        clear1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clear1ActionPerformed(evt);
            }
        });

        rSButtonHover1.setText("Sort By New");
        rSButtonHover1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        rSButtonHover1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rSButtonHover1ActionPerformed(evt);
            }
        });

        rSButtonHover2.setText("Sort By Old");
        rSButtonHover2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        rSButtonHover2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rSButtonHover2ActionPerformed(evt);
            }
        });

        rSButtonHover4.setText("Print");
        rSButtonHover4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        rSButtonHover4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rSButtonHover4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel8)
                                    .addComponent(searchItem, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel9))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(txtPage, javax.swing.GroupLayout.DEFAULT_SIZE, 265, Short.MAX_VALUE)
                                        .addComponent(txtPrice, javax.swing.GroupLayout.DEFAULT_SIZE, 265, Short.MAX_VALUE)
                                        .addComponent(txtAuthor, javax.swing.GroupLayout.DEFAULT_SIZE, 265, Short.MAX_VALUE)
                                        .addComponent(txtBookName, javax.swing.GroupLayout.DEFAULT_SIZE, 265, Short.MAX_VALUE)
                                        .addComponent(categories, 0, 265, Short.MAX_VALUE)
                                        .addComponent(jDateChooser1, javax.swing.GroupLayout.DEFAULT_SIZE, 265, Short.MAX_VALUE)
                                        .addComponent(txtBookNo, javax.swing.GroupLayout.DEFAULT_SIZE, 265, Short.MAX_VALUE)
                                        .addComponent(txtRackNo, javax.swing.GroupLayout.DEFAULT_SIZE, 265, Short.MAX_VALUE))
                                    .addComponent(search, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(31, 31, 31))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(rSButtonHover3, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(update, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Delete, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Back, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(clear1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(rSButtonHover2, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(rSButtonHover1, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(rSButtonHover4, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(43, 43, 43))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rSButtonHover4, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rSButtonHover1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rSButtonHover2, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(5, 5, 5))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(search, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel1)
                                    .addComponent(txtBookNo, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel2)
                                    .addComponent(txtBookName, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel3)
                                    .addComponent(txtAuthor, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel4)
                                    .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel5)
                                    .addComponent(txtPage, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel7)
                                    .addComponent(categories, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(searchItem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtRackNo, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 138, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rSButtonHover3, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(update, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Delete, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Back, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(clear1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(50, 50, 50))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 768, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txtBookNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBookNameKeyReleased
        // TODO add your handling code here:
        
    }//GEN-LAST:event_txtBookNameKeyReleased

    private void txtAuthorKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAuthorKeyReleased
        // TODO add your handling code here:
   
    }//GEN-LAST:event_txtAuthorKeyReleased

    private void txtBookNoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBookNoKeyReleased
        // TODO add your handling code here:
        
    }//GEN-LAST:event_txtBookNoKeyReleased

    private void tbldetailMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbldetailMouseClicked
        // TODO add your handling code here:
        DefaultTableModel tmodel = (DefaultTableModel)tbldetail.getModel();
        int selectedrowindex = tbldetail.getSelectedRow();

        txtBookNo.setText(tmodel.getValueAt(selectedrowindex, 0).toString());
        txtBookName.setText(tmodel.getValueAt(selectedrowindex, 1).toString());
        txtAuthor.setText(tmodel.getValueAt(selectedrowindex, 2).toString());
        ((JTextField)jDateChooser1.getDateEditor().getUiComponent()).setText(tmodel.getValueAt(selectedrowindex, 6).toString());
        txtPrice.setText(tmodel.getValueAt(selectedrowindex, 3).toString());
        txtPage .setText(tmodel.getValueAt(selectedrowindex, 4).toString());
        categories.setSelectedItem(tmodel.getValueAt(selectedrowindex, 5).toString());
        txtRackNo.setText(tmodel.getValueAt(selectedrowindex, 7).toString());
    }//GEN-LAST:event_tbldetailMouseClicked

    private void rSButtonHover3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rSButtonHover3ActionPerformed
        // TODO add your handling code here:
        String  bid = txtBookNo.getText();
        String  bname = txtBookName.getText();
        String  author = txtAuthor.getText(); 
        String  date = ((JTextField)jDateChooser1.getDateEditor().getUiComponent()).getText();
        String  price = txtPrice.getText();
        String  page = txtPage.getText();
        String  categoriesno = categories.getSelectedItem().toString();
        String  rackno = txtRackNo.getText();
   
       
        
        
        try{
            conn = Javaconnect.ConnecrDB();
            String sql = "INSERT INTO `book`(`bid`, `bname`, `author`, `price`, `page`, `categorie`, `date`, `rackno`, `status`) VALUES ('"+bid+"','"+bname+"','"+author+"','"+price+"','"+page+"','"+categoriesno+"','"+date+"','"+rackno+"','Active')";
            pst = conn.prepareStatement(sql);
            pst.execute();
            JOptionPane.showMessageDialog(rootPane,"Book Added  Succesfully");
        }catch(Exception e){
            JOptionPane.showMessageDialog(rootPane,e);
        }finally{
            try {
                pst.close();
                conn.close();
            } catch (SQLException ex) {
                Logger.getLogger(IssueBook.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }
        clearField();
        autoID();  
        tableLoard();
    }//GEN-LAST:event_rSButtonHover3ActionPerformed

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
        // TODO add your handling code here:
        String  bid = txtBookNo.getText();
        String  bname = txtBookName.getText();
        String  author = txtAuthor.getText(); 
        String  date = ((JTextField)jDateChooser1.getDateEditor().getUiComponent()).getText();
        String  price = txtPrice.getText();
        String  page = txtPage.getText();
        String  categoriesno = categories.getSelectedItem().toString();
        String  rackno = txtRackNo.getText();
        
        try{
        conn = Javaconnect.ConnecrDB(); 
        String sql = "UPDATE `book` SET `bname`='"+bname+"',`author`='"+author+"',`price`='"+price+"',`page`='"+page+"',`categorie`='"+categoriesno+"',`date`='"+date+"',`rackno`='"+rackno+"' WHERE bid = '"+bid+"'";    
        PreparedStatement pst = conn.prepareStatement(sql);
        pst.execute();
            
            JOptionPane.showMessageDialog(null,"Book Detail Updated Succexsfully");
        }catch(Exception e){
            JOptionPane.showMessageDialog(null,e);
        }finally{
            try {
                pst.close();
                conn.close();
            } catch (SQLException ex) {
                Logger.getLogger(IssueBook.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }
        
        tableLoard();
        //autoID();
        
    }//GEN-LAST:event_updateActionPerformed

    private void DeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteActionPerformed
        // TODO add your handling code here:
        int opt = JOptionPane.showConfirmDialog(null, "Are You Sure To Delete the Member","Delete",JOptionPane.YES_NO_OPTION);
        if(opt == 0){
         try{
             conn = Javaconnect.ConnecrDB();
             String sql = "DELETE FROM `book` WHERE bid = '"+txtBookNo.getText()+"'";
             pst = conn.prepareStatement(sql);
             pst.execute();
             JOptionPane.showMessageDialog(null,"Member Deleted Succexsfully");
             tableLoard();
         }catch(Exception e){
             JOptionPane.showMessageDialog(null,e);
         }finally{
            try {
                pst.close();
                conn.close();
            } catch (SQLException ex) {
                Logger.getLogger(IssueBook.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }
        }
    }//GEN-LAST:event_DeleteActionPerformed

    private void BackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackActionPerformed
        // TODO add your handling code here:
        setVisible(false);
    }//GEN-LAST:event_BackActionPerformed

    private void searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchActionPerformed
        // TODO add your handling code here:
            String value = searchItem.getSelectedItem().toString();
       
        if(value == "Search By BookNo"){
            //search by id
            searchById();
      
        }else if(value == "Search By BookName"){
            //search by name
            searchByName();
            
        }else if(value == "Search By Author"){
            //search by author
            searchByAuthor();
        
    }

    
    }//GEN-LAST:event_searchActionPerformed

    private void clear1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clear1ActionPerformed
        // TODO add your handling code here:
        clearField();
        autoID();
        tableLoard();
    }//GEN-LAST:event_clear1ActionPerformed

    private void rSButtonHover2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rSButtonHover2ActionPerformed
        // TODO add your handling code here:
        try{
            conn = Javaconnect.ConnecrDB();
        String sql = "SELECT `bid` AS BookID,`bname` AS BookName, `author` AS Author, `price` AS Price, `page` AS Pages, `categorie` AS CategorieNo, `date` AS ReciveDate, `rackno` AS RackNo, `status`  AS 'Status' FROM`book` ORDER BY bid ASC";
        pst = conn.prepareStatement(sql);
        rs = pst.executeQuery();
        tbldetail.setModel(net.proteanit.sql.DbUtils.resultSetToTableModel(rs));
        
        }catch(Exception e){
            JOptionPane.showConfirmDialog(rootPane , e);
        }finally{
            try {
                pst.close();
                rs.close();
                conn.close();
            } catch (SQLException ex) {
                Logger.getLogger(IssueBook.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }
    }//GEN-LAST:event_rSButtonHover2ActionPerformed

    private void rSButtonHover1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rSButtonHover1ActionPerformed
        // TODO add your handling code here:
        try{
            conn = Javaconnect.ConnecrDB();
        String sql = "SELECT `bid` AS BookID,`bname` AS BookName, `author` AS Author, `price` AS Price, `page` AS Pages, `categorie` AS CategorieNo, `date` AS ReciveDate, `rackno` AS RackNo, `status`  AS 'Status' FROM`book` ORDER BY bid DESC";
        pst = conn.prepareStatement(sql);
        rs = pst.executeQuery();
        tbldetail.setModel(net.proteanit.sql.DbUtils.resultSetToTableModel(rs));
        
        }catch(Exception e){
            JOptionPane.showConfirmDialog(rootPane , e);
        }finally{
            try {
                pst.close();
                rs.close();
                conn.close();
            } catch (SQLException ex) {
                Logger.getLogger(IssueBook.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }
    }//GEN-LAST:event_rSButtonHover1ActionPerformed

    private void rSButtonHover4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rSButtonHover4ActionPerformed
        // TODO add your handling code here:
         try {
             
                // TODO add your handling code here:
                tbldetail.print();
            } catch (PrinterException ex) {
                Logger.getLogger(NewMember.class.getName()).log(Level.SEVERE, null, ex);
            }
    }//GEN-LAST:event_rSButtonHover4ActionPerformed

    
    //load table from database
    
    
    private void searchById(){
        //load table from database
        
        try{
            conn = Javaconnect.ConnecrDB();
        String sql = "SELECT `bid` AS BookID,`bname` AS BookName, `author` AS Author, `price` AS Price, `page` AS Pages, `categorie` AS CategorieNo, `date` AS ReciveDate, `rackno` AS RackNo, `status`  AS 'Status' FROM`book` WHERE bid = '"+txtBookNo.getText()+"'";
        pst = conn.prepareStatement(sql);
        rs = pst.executeQuery();
               
             
             tbldetail.setModel(net.proteanit.sql.DbUtils.resultSetToTableModel(rs));
              
        }catch(Exception e){
            JOptionPane.showConfirmDialog(rootPane , e);
        }finally{
            try {
                pst.close();
                rs.close();
                conn.close();
            } catch (SQLException ex) {
                Logger.getLogger(IssueBook.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }
        
    }
    
     private void searchByName(){
        //load table from database
        
        try{
            conn = Javaconnect.ConnecrDB();
        String sql = "SELECT `bid` AS BookID,`bname` AS BookName, `author` AS Author, `price` AS Price, `page` AS Pages, `categorie` AS CategorieNo, `date` AS ReciveDate, `rackno` AS RackNo, `status`  AS 'Status' FROM`book` WHERE bname = '"+txtBookName.getText()+"'";
        pst = conn.prepareStatement(sql);
        rs = pst.executeQuery();
       
               
                tbldetail.setModel(net.proteanit.sql.DbUtils.resultSetToTableModel(rs));
           
        }catch(Exception e){
            JOptionPane.showConfirmDialog(rootPane , e);
        }finally{
            try {
                pst.close();
                rs.close();
                conn.close();
            } catch (SQLException ex) {
                Logger.getLogger(IssueBook.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }
        
    }
     
     
     
     private void searchByAuthor(){
        //load table from database
        
        try{
            conn = Javaconnect.ConnecrDB();
        String sql = "SELECT `bid` AS BookID,`bname` AS BookName, `author` AS Author, `price` AS Price, `page` AS Pages, `categorie` AS CategorieNo, `date` AS ReciveDate, `rackno` AS RackNo, `status`  AS 'Status' FROM`book` WHERE author = '"+txtAuthor.getText()+"'";
        pst = conn.prepareStatement(sql);
        rs = pst.executeQuery();
            
                
                tbldetail.setModel(net.proteanit.sql.DbUtils.resultSetToTableModel(rs));
           
            
        }catch(Exception e){
            JOptionPane.showConfirmDialog(rootPane , e);
        }finally{
            try {
                pst.close();
                rs.close();
                conn.close();
            } catch (SQLException ex) {
                Logger.getLogger(IssueBook.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }
        
    }
    
    
    private void tableLoard(){
        //load table from database
        
        try{
            conn = Javaconnect.ConnecrDB();
        String sql = "SELECT `bid` AS BookID,`bname` AS BookName, `author` AS Author, `price` AS Price, `page` AS Pages, `categorie` AS CategorieNo, `date` AS ReciveDate, `rackno` AS RackNo, `status`  AS 'Status' FROM`book`";
        pst = conn.prepareStatement(sql);
        rs = pst.executeQuery();
        tbldetail.setModel(net.proteanit.sql.DbUtils.resultSetToTableModel(rs));
        
        }catch(Exception e){
            JOptionPane.showConfirmDialog(rootPane , e);
        }finally{
            try {
                pst.close();
                rs.close();
                conn.close();
            } catch (SQLException ex) {
                Logger.getLogger(IssueBook.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }
        
    }
    
    //auto id
    private void autoID(){
        //generate nextId and show
        
        try{
            conn = Javaconnect.ConnecrDB();
        String sql = "SELECT bid FROM book ORDER BY bid DESC LIMIT 1";
        pst = conn.prepareStatement(sql);
        rs = pst.executeQuery();
        
        if(rs.next()){
            String idno = rs.getString(1);
            int n = Integer.parseInt(idno);
            n++;
            
            String bid = Integer.toString(n);
            txtBookNo.setText(bid);
        }else{
             txtBookNo.setText("1");
        }
        
        }catch(Exception e){
             JOptionPane.showMessageDialog(null,e);
            
        }finally{
            try {
                pst.close();
                rs.close();
                conn.close();
            } catch (SQLException ex) {
                Logger.getLogger(IssueBook.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }
      
    }
    
    
    
    
    private void clearField(){
        
        //clear textfield
   
        txtBookNo.setText("");
        txtBookName.setText("");
        txtAuthor.setText(""); 
        ((JTextField)jDateChooser1.getDateEditor().getUiComponent()).setText("");
        txtPrice.setText("");
        txtPage.setText("");
        txtRackNo.setText("");
        categories.setSelectedIndex(0);
      
    }

    
    
    
    
    
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewBook().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private rojeru_san.complementos.RSButtonHover Back;
    private rojeru_san.complementos.RSButtonHover Delete;
    private javax.swing.JComboBox<String> categories;
    private rojeru_san.complementos.RSButtonHover clear1;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane3;
    private rojeru_san.complementos.RSButtonHover rSButtonHover1;
    private rojeru_san.complementos.RSButtonHover rSButtonHover2;
    private rojeru_san.complementos.RSButtonHover rSButtonHover3;
    private rojeru_san.complementos.RSButtonHover rSButtonHover4;
    private rojeru_san.complementos.RSButtonHover search;
    private javax.swing.JComboBox<String> searchItem;
    private rojeru_san.complementos.RSTableMetro tbldetail;
    private javax.swing.JTextField txtAuthor;
    private javax.swing.JTextField txtBookName;
    private javax.swing.JTextField txtBookNo;
    private javax.swing.JTextField txtPage;
    private javax.swing.JTextField txtPrice;
    private javax.swing.JTextField txtRackNo;
    private rojeru_san.complementos.RSButtonHover update;
    // End of variables declaration//GEN-END:variables
}
