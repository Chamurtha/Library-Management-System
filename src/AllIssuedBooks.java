
import java.awt.print.PrinterException;
import java.io.File;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.ZoneId;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Thisath Dewsen
 */
public class AllIssuedBooks extends javax.swing.JFrame {
        Connection conn;
        ResultSet rs;
        PreparedStatement pst; 
         
    /**
     * Creates new form NewMember
     */
    public AllIssuedBooks() {
        super("All Issued Books");
        initComponents();
        //conn = Javaconnect.ConnecrDB(); 
        setExtendedState(MAXIMIZED_BOTH);
        tableLoard();
        iid.setVisible(false);
       
        //setExtendedState(MAXIMIZED_BOTH);
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        AllIssuedBooks = new rojeru_san.complementos.RSTableMetro();
        txtSearch = new javax.swing.JTextField();
        rSButtonHover1 = new rojeru_san.complementos.RSButtonHover();
        rSButtonHover2 = new rojeru_san.complementos.RSButtonHover();
        rSButtonHover3 = new rojeru_san.complementos.RSButtonHover();
        jLabel1 = new javax.swing.JLabel();
        fromdate = new com.toedter.calendar.JDateChooser();
        todate = new com.toedter.calendar.JDateChooser();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        rSButtonHover4 = new rojeru_san.complementos.RSButtonHover();
        count = new rojeru_san.complementos.RSButtonHover();
        rSButtonHover5 = new rojeru_san.complementos.RSButtonHover();
        iid = new javax.swing.JTextField();
        rSButtonHover6 = new rojeru_san.complementos.RSButtonHover();

        jTextField1.setText("jTextField1");

        jPanel1.setBackground(new java.awt.Color(240, 168, 76));
        jPanel1.setPreferredSize(new java.awt.Dimension(1366, 917));

        jLabel8.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jLabel8.setText("Issue Histroy");

        AllIssuedBooks.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        AllIssuedBooks.setColorBackgoundHead(new java.awt.Color(255, 255, 204));
        AllIssuedBooks.setColorBordeFilas(new java.awt.Color(204, 204, 204));
        AllIssuedBooks.setColorBordeHead(new java.awt.Color(204, 204, 204));
        AllIssuedBooks.setColorFilasBackgound1(new java.awt.Color(204, 204, 204));
        AllIssuedBooks.setColorFilasBackgound2(new java.awt.Color(255, 255, 255));
        AllIssuedBooks.setColorFilasForeground1(new java.awt.Color(0, 0, 0));
        AllIssuedBooks.setColorFilasForeground2(new java.awt.Color(0, 0, 0));
        AllIssuedBooks.setColorForegroundHead(new java.awt.Color(51, 51, 51));
        AllIssuedBooks.setColorSelBackgound(new java.awt.Color(51, 153, 255));
        AllIssuedBooks.setFuenteFilas(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        AllIssuedBooks.setFuenteFilasSelect(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        AllIssuedBooks.setFuenteHead(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        AllIssuedBooks.setGridColor(new java.awt.Color(153, 153, 153));
        AllIssuedBooks.setIntercellSpacing(new java.awt.Dimension(0, 0));
        AllIssuedBooks.setRowHeight(28);
        AllIssuedBooks.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AllIssuedBooksMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(AllIssuedBooks);

        txtSearch.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchKeyReleased(evt);
            }
        });

        rSButtonHover1.setText("Print");
        rSButtonHover1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        rSButtonHover1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rSButtonHover1ActionPerformed(evt);
            }
        });

        rSButtonHover2.setBackground(new java.awt.Color(204, 204, 204));
        rSButtonHover2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/undo.png"))); // NOI18N
        rSButtonHover2.setText("Back");
        rSButtonHover2.setColorText(new java.awt.Color(0, 0, 0));
        rSButtonHover2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rSButtonHover2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rSButtonHover2ActionPerformed(evt);
            }
        });

        rSButtonHover3.setBackground(new java.awt.Color(204, 204, 204));
        rSButtonHover3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/cleaning.png"))); // NOI18N
        rSButtonHover3.setText("Clear");
        rSButtonHover3.setColorText(new java.awt.Color(0, 0, 0));
        rSButtonHover3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rSButtonHover3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rSButtonHover3ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel1.setText("Membr ID");

        fromdate.setDateFormatString("yyyy-MM-dd");
        fromdate.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        todate.setDateFormatString("yyyy-MM-dd");
        todate.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel2.setText("To");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel3.setText("From");

        rSButtonHover4.setBackground(new java.awt.Color(204, 204, 204));
        rSButtonHover4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/refresh.png"))); // NOI18N
        rSButtonHover4.setText("Filter");
        rSButtonHover4.setColorText(new java.awt.Color(0, 0, 0));
        rSButtonHover4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rSButtonHover4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rSButtonHover4ActionPerformed(evt);
            }
        });

        count.setText("0");
        count.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        rSButtonHover5.setBackground(new java.awt.Color(204, 204, 204));
        rSButtonHover5.setBorder(null);
        rSButtonHover5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/delete.png"))); // NOI18N
        rSButtonHover5.setText("Delete");
        rSButtonHover5.setColorText(new java.awt.Color(0, 0, 0));
        rSButtonHover5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rSButtonHover5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rSButtonHover5ActionPerformed(evt);
            }
        });

        iid.setText("jTextField2");

        rSButtonHover6.setText("Generate Report");
        rSButtonHover6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rSButtonHover6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(iid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(rSButtonHover6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(count, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(13, 13, 13)
                        .addComponent(rSButtonHover5, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(rSButtonHover2, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(rSButtonHover3, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(rSButtonHover1, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGap(36, 36, 36)
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(fromdate, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(todate, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(rSButtonHover4, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(50, 50, 50))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rSButtonHover4, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(todate, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel2)
                        .addComponent(fromdate, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 636, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rSButtonHover1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(rSButtonHover2, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(rSButtonHover3, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(count, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(rSButtonHover5, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(iid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(rSButtonHover6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(23, 23, 23))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 768, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void rSButtonHover2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rSButtonHover2ActionPerformed
        // TODO add your handling code here:
        setVisible(false);
    }//GEN-LAST:event_rSButtonHover2ActionPerformed

    private void txtSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyReleased
        // TODO add your handling code here:
        try{
            conn = Javaconnect.ConnecrDB();
            String sql = "SELECT `iid` AS IssueID, `mid` AS MemberId, `bid` AS BookId, `bname` AS BookName,`cat_no` AS CategoriNo, `i_date` AS IssueDate, `r_date` AS DueDate FROM `issue`  WHERE mid LIKE  '%"+txtSearch.getText()+"%'";
            pst = conn.prepareStatement(sql);
            rs = pst.executeQuery();
            AllIssuedBooks.setModel(net.proteanit.sql.DbUtils.resultSetToTableModel(rs));
            countIssue();
            
        }catch(Exception e){
             JOptionPane.showMessageDialog(rootPane,e);
        }finally{
            try {
                pst.close();
                rs.close();
                conn.close();
            } catch (SQLException ex) {
                Logger.getLogger(AllIssuedBooks.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_txtSearchKeyReleased

    private void rSButtonHover4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rSButtonHover4ActionPerformed
        // TODO add your handling code here:
        filterIssedBooks();
    }//GEN-LAST:event_rSButtonHover4ActionPerformed

    private void rSButtonHover3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rSButtonHover3ActionPerformed
        // TODO add your handling code here:
        tableLoard();
        ((JTextField)fromdate.getDateEditor().getUiComponent()).setText("");
        ((JTextField)todate.getDateEditor().getUiComponent()).setText("");
    }//GEN-LAST:event_rSButtonHover3ActionPerformed

    private void rSButtonHover1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rSButtonHover1ActionPerformed
            try {
                // TODO add your handling code here:
                AllIssuedBooks.print();
            } catch (PrinterException ex) {
                Logger.getLogger(AllIssuedBooks.class.getName()).log(Level.SEVERE, null, ex);
            }
    }//GEN-LAST:event_rSButtonHover1ActionPerformed

    private void AllIssuedBooksMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AllIssuedBooksMouseClicked
        // TODO add your handling code here:
        DefaultTableModel tmodel = (DefaultTableModel)AllIssuedBooks.getModel();
        int selectedrowindex = AllIssuedBooks.getSelectedRow();

        iid.setText(tmodel.getValueAt(selectedrowindex, 0).toString());
        
    }//GEN-LAST:event_AllIssuedBooksMouseClicked

    private void rSButtonHover5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rSButtonHover5ActionPerformed
        // TODO add your handling code here:
        int opt = JOptionPane.showConfirmDialog(null, "Are You Sure To Delete the Issue Record","Delete",JOptionPane.YES_NO_OPTION);
        if(opt == 0){
         try{
             conn = Javaconnect.ConnecrDB();
             String sql = "DELETE FROM `issue` WHERE iid = '"+iid.getText()+"'";
             pst = conn.prepareStatement(sql);
             pst.execute();
             JOptionPane.showMessageDialog(null," Issue Detail Deleted Succesfully");
             tableLoard();
             
         }catch(Exception e){
             JOptionPane.showMessageDialog(null,e);
         }finally{
            try {
                pst.close();
                conn.close();
            } catch (SQLException ex) {
                Logger.getLogger(AllIssuedBooks.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        }
    }//GEN-LAST:event_rSButtonHover5ActionPerformed

    private void rSButtonHover6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rSButtonHover6ActionPerformed
        // TODO add your handling code here:
        String FDate = ((JTextField)fromdate.getDateEditor().getUiComponent()).getText().toString();
        String TDate = ((JTextField)todate.getDateEditor().getUiComponent()).getText().toString();
        
        if(FDate.length()>0 &&  TDate.isEmpty()){
            
            try{
                conn = Javaconnect.ConnecrDB();
                String sql = "SELECT cat_no AS CategorieNo,COUNT(iid) AS Count FROM (SELECT * FROM issue WHERE i_date = '"+FDate+"')as D GROUP BY cat_no ORDER BY cat_no ASC";
                pst = conn.prepareStatement(sql);
                rs = pst.executeQuery();
                AllIssuedBooks.setModel(net.proteanit.sql.DbUtils.resultSetToTableModel(rs));
                countIssue();
                ;
            }catch(Exception e){
            
                JOptionPane.showMessageDialog(rootPane,e);
            }finally{
            try {
                pst.close();
                rs.close();
                conn.close();
            } catch (SQLException ex) {
                Logger.getLogger(AllIssuedBooks.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
            
            
        }else if(FDate.length()>0 &&  TDate.length()> 0){
            
                try{
                conn = Javaconnect.ConnecrDB();
                String sql = "SELECT cat_no AS CategorieNo,COUNT(iid) AS Count FROM (SELECT * FROM issue WHERE i_date BETWEEN '"+FDate+"' AND '"+TDate+"') as D GROUP BY cat_no ORDER BY cat_no ASC;";
                pst = conn.prepareStatement(sql);
                rs = pst.executeQuery();
                AllIssuedBooks.setModel(net.proteanit.sql.DbUtils.resultSetToTableModel(rs));
                countIssue();
                
                }catch(Exception e){
                    JOptionPane.showMessageDialog(rootPane,e);
                }finally{
            try {
                pst.close();
                rs.close();
                conn.close();
            } catch (SQLException ex) {
                Logger.getLogger(AllIssuedBooks.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
                
        }
    }//GEN-LAST:event_rSButtonHover6ActionPerformed

    
    
        
        

    
    //retrieve data from database to table
  
    private void tableLoard(){
        //load table from database
         try{
            conn = Javaconnect.ConnecrDB();
            String sql = "SELECT `iid` AS IssueID, `mid` AS MemberId, `bid` AS BookId, `bname` AS BookName,`cat_no` AS CategoriNo, `i_date` AS IssueDate, `r_date` AS DueDate FROM `issue`";
            pst = conn.prepareStatement(sql);
            rs = pst.executeQuery();
            AllIssuedBooks.setModel(net.proteanit.sql.DbUtils.resultSetToTableModel(rs));
            countIssue();
            
        }catch(Exception e){
            JOptionPane.showMessageDialog(rootPane,e);
        }finally{
            try {
                pst.close();
                rs.close();
                conn.close();
            } catch (SQLException ex) {
                Logger.getLogger(AllIssuedBooks.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
         
        
   
        
    }
    
    public void filterIssedBooks(){
        
        //SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        String FDate = ((JTextField)fromdate.getDateEditor().getUiComponent()).getText().toString();
        String TDate = ((JTextField)todate.getDateEditor().getUiComponent()).getText().toString();
        
        if(FDate.length()>0 &&  TDate.isEmpty()){
            
            try{
                conn = Javaconnect.ConnecrDB();
                String sql = "SELECT `iid` AS IssueID, `mid` AS MemberId, `bid` AS BookId, `bname` AS BookName,`cat_no` AS CategoriNo, `i_date` AS IssueDate, `r_date` AS DueDate FROM `issue` WHERE i_date = '"+FDate+"'";
                pst = conn.prepareStatement(sql);
                rs = pst.executeQuery();
                AllIssuedBooks.setModel(net.proteanit.sql.DbUtils.resultSetToTableModel(rs));
                countIssue();
                
            }catch(Exception e){
            
                JOptionPane.showMessageDialog(rootPane,e);
            }finally{
            try {
                pst.close();
                rs.close();
                conn.close();
            } catch (SQLException ex) {
                Logger.getLogger(AllIssuedBooks.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
            
            
        }else if(FDate.length()>0 &&  TDate.length()> 0){
            
                try{
                conn = Javaconnect.ConnecrDB();
                String sql = "SELECT `iid` AS IssueID, `mid` AS MemberId, `bid` AS BookId, `bname` AS BookName,`cat_no` AS CategoriNo, `i_date` AS IssueDate, `r_date` AS DueDate FROM `issue` WHERE i_date BETWEEN '"+FDate+"' AND '"+TDate+"'";
                pst = conn.prepareStatement(sql);
                rs = pst.executeQuery();
                AllIssuedBooks.setModel(net.proteanit.sql.DbUtils.resultSetToTableModel(rs));
                countIssue();
                }catch(Exception e){
                    JOptionPane.showMessageDialog(rootPane,e);
                }finally{
            try {
                pst.close();
                rs.close();
                conn.close();
            } catch (SQLException ex) {
                Logger.getLogger(AllIssuedBooks.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
                
        }
    }
    
    public void countIssue(){
        DefaultTableModel t=(DefaultTableModel)AllIssuedBooks.getModel();
        int number_of_rows = t.getRowCount();
        String c = Integer.toString(number_of_rows);
        count.setText(c);
    }
   
    


    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewMember.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewMember.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewMember.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewMember.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
            java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AllIssuedBooks().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private rojeru_san.complementos.RSTableMetro AllIssuedBooks;
    private rojeru_san.complementos.RSButtonHover count;
    private com.toedter.calendar.JDateChooser fromdate;
    private javax.swing.JTextField iid;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    private rojeru_san.complementos.RSButtonHover rSButtonHover1;
    private rojeru_san.complementos.RSButtonHover rSButtonHover2;
    private rojeru_san.complementos.RSButtonHover rSButtonHover3;
    private rojeru_san.complementos.RSButtonHover rSButtonHover4;
    private rojeru_san.complementos.RSButtonHover rSButtonHover5;
    private rojeru_san.complementos.RSButtonHover rSButtonHover6;
    private com.toedter.calendar.JDateChooser todate;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables
}
